plugins {
	id 'java-library'
	id "com.diffplug.gradle.spotless" version "3.27.1"
	id 'com.adarshr.test-logger' version '2.0.0'
}

ext {
	libraries = [
		// Test
		junit_jupiter : 'org.junit.jupiter:junit-jupiter:5.6.0',
		assertJ : 'org.assertj:assertj-core:3.11.1'
	]
}

allprojects {
	apply plugin: 'java-library'
	apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

	repositories {
		jcenter()
	}
}


subprojects {
	apply plugin: 'com.diffplug.gradle.spotless'
	apply plugin: 'com.adarshr.test-logger'

	dependencies {
		testImplementation libraries.junit_jupiter
		testImplementation libraries.assertJ
	}

	test {
		useJUnitPlatform()
	}

	testlogger {
		theme 'mocha'
	}

	spotless {
		java {
			removeUnusedImports()
			trimTrailingWhitespace()
			eclipse().configFile "${rootProject.projectDir}/EclipseFormatter.xml"
		}
	}

	jacocoTestReport {
			additionalSourceDirs.setFrom files(sourceSets.main.allSource.srcDirs)
			sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
			classDirectories.setFrom  files(sourceSets.main.output)
			reports {
				html.enabled = true
				xml.enabled = true
				csv.enabled = false
			}
	}
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
	dependsOn = subprojects.test

	additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
	sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
	classDirectories.setFrom files(subprojects.sourceSets.main.output)
	executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')

	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = false
	}
}
