plugins {
	id 'java-library'
	id 'org.sonarqube' version '2.7'
}

ext {
	libraries = [
		// Implementation
		guava : 'com.google.guava:guava:29.0-jre',
		// Test
		junit_jupiter : 'org.junit:junit-bom:5.7.2',
		assertJ : 'org.assertj:assertj-core:3.11.1'
	]
}

allprojects {
	apply plugin: 'java-library'
	apply plugin: 'jacoco'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
        mavenCentral()
	}
}


subprojects {
	dependencies {
		implementation libraries.guava

		testImplementation libraries.assertJ
        testImplementation(platform(libraries.junit_jupiter))
        testImplementation('org.junit.jupiter:junit-jupiter')
	}

	test {
		useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
	}

	jacocoTestReport {
			additionalSourceDirs.setFrom files(sourceSets.main.allSource.srcDirs)
			sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
			classDirectories.setFrom  files(sourceSets.main.output)
			reports {
				html.enabled = true
				xml.enabled = true
				csv.enabled = false
			}
	}
}

task jacocoRootReport(type: JacocoReport) {
	dependsOn = subprojects.test

	additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
	sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
	classDirectories.setFrom files(subprojects.sourceSets.main.output)
	executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')

	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = false
	}
}

sonarqube {
    properties {
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

project.tasks['sonarqube'].dependsOn subprojects.jacocoTestReport
