package org.amshove.natparse.lexing;

public enum SyntaxKind
{
	LBRACKET,
	RBRACKET,
	LPAREN,
	RPAREN,
	EQUALS,
	COLON,
	COLON_EQUALS,
	DOT,
	CARET,
	COMMA,
	PLUS,
	MINUS,
	ASTERISK,
	SLASH,
	BACKSLASH,
	SEMICOLON,
	GREATER_SIGN,
	GREATER_EQUALS_SIGN,
	LESSER_SIGN,
	LESSER_EQUALS_SIGN,
	NUMBER_LITERAL,
	LESSER_GREATER,
	STRING_LITERAL,
	IDENTIFIER,
	LABEL_IDENTIFIER,
	COMMENT,
	PERCENT,
	QUESTIONMARK,
	OPERAND_SKIP,

	// System variables and functions
	TIMX,
	TIMN,
	DATD,
	DATX,
	DATN,
	LIBRARY_ID,
	LINEX,
	CURRENT_UNIT,
	OCC,
	OCCURENCE,
	ERROR_NR,
	ERROR_LINE,
	ERROR_TA,
	LINE,
	TRIM,
	MAXVAL,
	MINVAL,
	CURS_LINE,
	PF_KEY,
	INIT_USER,
	COUNTER,
	DEVICE,
	OPSYS,
	TPSYS,

	// Natural reserved keywords
	ABS,
	ABSOLUTE,
	ACCEPT,
	ACTION,
	ACTIVATION,
	AD, // Attribute Definition
	ADD,
	AFTER,
	AL,
	ALARM,
	ALL,
	ALPHA,
	ALPHABETICALLY,
	AND,
	ANY,
	APPL,
	APPLICATION,
	ARRAY,
	AS,
	ASC,
	ASCENDING,
	ASSIGN,
	ASSIGNING,
	ASYNC,
	AT,
	ATN,
	ATT,
	ATTRIBUTES,
	AUTH,
	AUTHORIZATION,
	AUTO,
	AVER,
	AVG,
	BACKOUT,
	BACKWARD,
	BASE,
	// BEFORE, sadly this is used my natunit as a subroutine name :(
	BETWEEN,
	BLOCK,
	BOT,
	BOTTOM,
	BREAK,
	BROWSE,
	BUT,
	BX,
	BY,
	CABINET,
	CALL,
	CALLDBPROC,
	CALLING,
	CALLNAT,
	CAP,
	CAPTIONED,
	CASE,
	CC,
	CD,
	CDID,
	CF,
	CHAR,
	CHARLENGTH,
	CHARPOSITION,
	CHILD,
	CIPH,
	CIPHER,
	CLASS,
	CLOSE,
	CLR,
	COALESCE,
	CODEPAGE,
	COMMAND,
	COMMIT,
	COMPOSE,
	COMPRESS,
	COMPUTE,
	CONCAT,
	CONDITION,
	CONST,
	CONSTANT,
	CONTEXT,
	CONTROL,
	CONVERSATION,
	COPIES,
	COPY,
	COS,
	COUNT,
	COUPLED,
	CS,
	CURRENT,
	CURSOR,
	CV,
	DATA,
	DATAAREA,
	DATE,
	DAY,
	DAYS,
	DC,
	DECIDE,
	DECIMAL,
	DEFINE,
	DEFINITION,
	DELETE,
	DELIMITED,
	DELIMITER,
	DELIMITERS,
	DESC,
	DESCENDING,
	DIALOG,
	DIALOG_ID,
	DIGITS,
	DIRECTION,
	DISABLED,
	DISP,
	DISPLAY,
	DISTINCT,
	DIVIDE,
	DL,
	DLOGOFF,
	DLOGON,
	DNATIVE,
	DNRET,
	DO,
	DOCUMENT,
	DOEND,
	DOWNLOAD,
	DU,
	DY,
	DYNAMIC,
	EDITED,
	EJ,
	EJECT,
	ELSE,
	EM, // EDITOR MASK
	ENCODED,
	END,
	END_ALL,
	END_BEFORE,
	END_BREAK,
	END_BROWSE,
	END_CLASS,
	END_DECIDE,
	END_DEFINE,
	END_ENDDATA,
	END_ENDFILE,
	END_ENDPAGE,
	END_ERROR,
	END_FILE,
	END_FIND,
	END_FOR,
	END_FUNCTION,
	END_HISTOGRAM,
	ENDHOC,
	END_IF,
	END_INTERFACE,
	END_LOOP,
	END_METHOD,
	END_NOREC,
	END_PARAMETERS,
	END_PARSE,
	END_PROCESS,
	END_PROPERTY,
	END_PROTOTYPE,
	END_READ,
	END_REPEAT,
	END_RESULT,
	END_SELECT,
	END_SORT,
	END_START,
	END_SUBROUTINE,
	END_TOPPAGE,
	END_WORK,
	ENDING,
	ENTER,
	ENTIRE,
	ENTR,
	EQ,
	EQUAL,
	ERASE,
	ERROR,
	ERRORS,
	ES,
	ESCAPE,
	EVEN,
	EVENT,
	EVERY,
	EXAMINE,
	EXCEPT,
	EXISTS,
	EXIT,
	EXP,
	EXPAND,
	EXPORT,
	EXTERNAL,
	EXTRACTING,
	FALSE,
	FC,
	FETCH,
	FIELD,
	FIELDS,
	FILE,
	FILL,
	FILLER,
	FINAL,
	FIND,
	FIRST,
	FL,
	FLOAT,
	FOR,
	FORM,
	FORMAT,
	FORMATTED,
	FORMATTING,
	FORMS,
	FORWARD,
	FOUND,
	FRAC,
	FRAMED,
	FROM,
	FS,
	FULL,
	FUNCTION,
	FUNCTIONS,
	GC,
	GE,
	GEN,
	GENERATED,
	GET,
	GFID,
	GIVE,
	GIVING,
	GLOBAL,
	GLOBALS,
	GREATER,
	GT,
	GUI,
	HANDLE,
	HAVING,
	HC,
	HD,
	HE,
	HEADER,
	HEX,
	HISTOGRAM,
	HOLD,
	HORIZ,
	HORIZONTALLY,
	HOUR,
	HOURS,
	HW,
	IA,
	IC,
	ID,
	IDENTICAL,
	IF,
	IGNORE,
	IM,
	IMMEDIATE,
	IMPORT,
	IN,
	INC,
	INCCONT,
	INCDIC,
	INCDIR,
	INCLUDE,
	INCLUDED,
	INCLUDING,
	INCMAC,
	INDEPENDENT,
	INDEX,
	INDEXED,
	INDICATOR,
	INIT,
	INITIAL,
	INNER,
	INPUT,
	INSENSITIVE,
	INSERT,
	INT,
	INTEGER,
	INTERCEPTED,
	INTERFACE,
	INTERFACE4,
	INTERMEDIATE,
	INTERSECT,
	INTO,
	INVERTED,
	INVESTIGATE,
	IP,
	IS,
	ISN,
	JOIN,
	JUST,
	JUSTIFIED,
	KD,
	KEEP,
	KEY,
	KEYS,
	LANGUAGE,
	LAST,
	LC,
	LE,
	LEAVE,
	LEAVING,
	LEFT,
	LENGTH,
	LESS,
	LEVEL,
	LIB,
	LIBPW,
	LIBRARY,
	LIBRARY_PASSWORD,
	LIKE,
	LIMIT,
	LINDICATOR,
	LINES,
	LISTED,
	LOCAL,
	LOCKS,
	// LOG, sadly this is used my natunit as a subroutine name :(
	LOG_LS,
	LOG_PS,
	LOGICAL,
	LOOP,
	LOWER,
	LS,
	LT,
	MACROAREA,
	MAP,
	MARK,
	MASK,
	MAX,
	MC,
	MCG,
	MESSAGES,
	METHOD,
	MGID,
	MICROSECOND,
	MIN,
	MINUTE,
	MODAL,
	MODIFIED,
	MODULE,
	MONTH,
	MORE,
	MOVE,
	MOVING,
	MP,
	MS,
	MT,
	MULTI_FETCH,
	MULTIPLY,
	NAME,
	NAMED,
	NAMESPACE,
	NATIVE,
	NAVER,
	NC,
	NCOUNT,
	NE,
	NEWPAGE,
	NL,
	NMIN,
	NO,
	NODE,
	NOHDR,
	NONE,
	NORMALIZE,
	NORMALIZED,
	NOT,
	NOTIT,
	NOTITLE,
	NULL,
	NULL_HANDLE,
	KW_NUMBER,
	NUMERIC,
	OBJECT,
	OBTAIN,
	OCCURRENCES,
	OF,
	OFF,
	OFFSET,
	OLD,
	ON,
	ONCE,
	ONLY,
	OPEN,
	OPTIMIZE,
	OPTIONAL,
	OPTIONS,
	OR,
	ORDER,
	OUTER,
	OUTPUT,
	PACKAGESET,
	PAGE,
	PARAMETER,
	PARAMETERS,
	PARENT,
	PARSE,
	PASS,
	PASSW,
	PASSWORD,
	PATH,
	PATTERN,
	PA1,
	PA2,
	PA3,
	PC,
	PD,
	PEN,
	PERFORM,
	PF,
	PGDN,
	PGUP,
	PGM,
	PHYSICAL,
	PM,
	POLICY,
	POS,
	POSITION,
	PREFIX,
	PRINT,
	PRINTER,
	PROCESS,
	PROCESSING,
	PROFILE,
	PROGRAM,
	PROPERTY,
	PROTOTYPE,
	PRTY,
	PS,
	PT,
	PW,
	QUARTER,
	QUERYNO,
	RD,
	READ,
	READONLY,
	REC,
	RECORD,
	RECORDS,
	RECURSIVELY,
	REDEFINE,
	REDUCE,
	REFERENCED,
	REFERENCING,
	REINPUT,
	REJECT,
	REL,
	RELATION,
	RELATIONSHIP,
	RELEASE,
	REMAINDER,
	REPEAT,
	REPLACE,
	REPORT,
	REPORTER,
	REPOSITION,
	REQUEST,
	REQUIRED,
	RESET,
	RESETTING,
	RESIZE,
	RESPONSE,
	RESTORE,
	RESULT,
	RET,
	RETAIN,
	RETAINED,
	RETRY,
	RETURN,
	RETURNS,
	REVERSED,
	RG,
	RIGHT,
	ROLLBACK,
	ROUNDED,
	ROUTINE,
	ROW,
	ROWS,
	RR,
	RS,
	RULEVAR,
	RUN,
	SA,
	SAME,
	SCAN,
	SCREEN,
	SCROLL,
	SECOND,
	SELECT,
	SELECTION,
	SEND,
	SENSITIVE,
	SEPARATE,
	SEQUENCE,
	SERVER,
	SET,
	SETS,
	SETTIME,
	SF,
	SG,
	SGN,
	SHORT,
	SHOW,
	SIN,
	SINGLE,
	SIZE,
	SKIP,
	SL,
	SM,
	SOME,
	SORT,
	SORTED,
	SORTKEY,
	SOUND,
	SPACE,
	SPECIFIED,
	SQL,
	SQLID,
	SQRT,
	STACK,
	START,
	STARTING,
	STATEMENT,
	STATIC,
	STATUS,
	STEP,
	STOP,
	STORE,
	SUBPROGRAM,
	SUBPROGRAMS,
	SUBROUTINE,
	SUBSTR,
	SUBSTRING,
	SUBTRACT,
	SUM,
	SUPPRESS,
	SUPPRESSED,
	SUSPEND,
	SYMBOL,
	SYNC,
	SYSTEM,
	TAN,
	TC,
	TERMINATE,
	TEXT,
	TEXTAREA,
	TEXTVARIABLE,
	THAN,
	THEM,
	THEN,
	THRU,
	TIME,
	TIMESTAMP,
	TIMEZONE,
	TITLE,
	TO,
	TOP,
	TOTAL,
	TP,
	TR,
	TRAILER,
	TRANSACTION,
	TRANSFER,
	TRANSLATE,
	TREQ,
	TRUE,
	TS,
	TYPE,
	TYPES,
	UC,
	UNDERLINED,
	UNION,
	UNIQUE,
	UNKNOWN,
	UNTIL,
	UPDATE,
	UPLOAD,
	UPPER,
	UR,
	USED,
	USER,
	USING,
	VAL,
	VALUE,
	VALUES,
	VARGRAPHIC,
	VARIABLE,
	VARIABLES,
	VERT,
	VERTICALLY,
	VIA,
	VIEW,
	WH,
	WHEN,
	WHERE,
	WHILE,
	WINDOW,
	WITH,
	WORK,
	WRITE,
	WITH_CTE,
	XML,
	YEAR,
	ZD,
	ZP;


	@Deprecated(since="Directly test against IDENTIFIER", forRemoval=true)
	public boolean isIdentifier()
	{
		return this == IDENTIFIER;
	}

	public boolean isSystemVariable()
	{
		return this == DATN || this == DATX || this == TIMX || this == LANGUAGE || this == PROGRAM || this == USER || this == LIBRARY_ID;
	}

	public boolean isBoolean()
	{
		return this == TRUE || this == FALSE;
	}

	public boolean isLiteralOrConst()
	{
		return isBoolean() || this == NUMBER_LITERAL || this == STRING_LITERAL;
	}

	public boolean canBeIdentifier()
	{
		switch (this)
		{
			case ABS:
			case ACCEPT:
			case ADD:
			case ALL:
			case ANY:
			case ASSIGN:
			case AT:
			case ATN:
			case AVER:
			case BACKOUT:
				//case BEFORE:
			case BREAK:
			case BROWSE:
			case CALL:
			case CALLDBPROC:
			case CALLNAT:
			case CLOSE:
			case COMMIT:
			case COMPOSE:
			case COMPRESS:
			case COMPUTE:
			case COPY:
			case COS:
			case COUNT:
			case DECIDE:
			case DEFINE:
			case DELETE:
			case DISPLAY:
			case DIVIDE:
			case DLOGOFF:
			case DLOGON:
			case DNATIVE:
			case DO:
			case DOEND:
			case DOWNLOAD:
			case EJECT:
			case ELSE:
			case END:
			case END_ALL:
			case END_BEFORE:
			case END_BREAK:
			case END_BROWSE:
			case END_DECIDE:
			case END_ENDDATA:
			case END_ENDFILE:
			case END_ENDPAGE:
			case END_ERROR:
			case END_FILE:
			case END_FIND:
			case END_FOR:
			case END_FUNCTION:
			case END_HISTOGRAM:
			case ENDHOC:
			case END_IF:
			case END_LOOP:
			case END_NOREC:
			case END_PARSE:
			case END_PROCESS:
			case END_READ:
			case END_REPEAT:
			case END_RESULT:
			case END_SELECT:
			case END_SORT:
			case END_START:
			case END_SUBROUTINE:
			case END_TOPPAGE:
			case END_WORK:
			case ENTIRE:
			case ESCAPE:
			case EXAMINE:
			case EXP:
			case EXPAND:
			case EXPORT:
			case FALSE:
			case FETCH:
			case FIND:
			case FOR:
			case FORMAT:
			case FRAC:
			case GET:
			case HISTOGRAM:
			case IF:
			case IGNORE:
			case IMPORT:
			case INCCONT:
			case INCDIC:
			case INCDIR:
			case INCLUDE:
			case INCMAC:
			case INPUT:
			case INSERT:
			case INT:
			case INVESTIGATE:
			case LIMIT:
			// case LOG:
			case LOOP:
			case MAP:
			case MAX:
			case MIN:
			case MOVE:
			case MULTIPLY:
			case NAVER:
			case NCOUNT:
			case NEWPAGE:
			case NMIN:
			case NONE:
			case NULL_HANDLE:
			case OBTAIN:
			case OLD:
			case ON:
			case OPEN:
			case OPTIONS:
			case PARSE:
			case PASSW:
			case PERFORM:
			case POS:
			case PRINT:
			case PROCESS:
			case READ:
			case REDEFINE:
			case REDUCE:
			case REINPUT:
			case REJECT:
			case RELEASE:
			case REPEAT:
			case REQUEST:
			case RESET:
			case RESIZE:
			case RESTORE:
			case RET:
			case RETRY:
			case RETURN:
			case ROLLBACK:
			case ROUNDED:
			case RULEVAR:
			case RUN:
			case SELECT:
			case SEND:
			case SEPARATE:
			case SET:
			case SETTIME:
			case SGN:
			case SHOW:
			case SIN:
			case SKIP:
			case SORT:
			case SORTKEY:
			case SQRT:
			case STACK:
			case START:
			case STOP:
			case STORE:
			case SUBSTR:
			case SUBSTRING:
			case SUBTRACT:
			case SUM:
			case SUSPEND:
			case TAN:
			case TERMINATE:
			case TOP:
			case TOTAL:
			case TRANSFER:
			case TRUE:
			case UNTIL:
			case UPDATE:
			case UPLOAD:
			case VAL:
			case VALUE:
			case VALUES:
			case WHEN:
			case WHILE:
			case WITH_CTE:
			case WRITE:
			case LBRACKET:
			case RBRACKET:
			case LPAREN:
			case RPAREN:
			case EQUALS:
			case COLON:
			case COLON_EQUALS:
			case DOT:
			case CARET:
			case COMMA:
			case PLUS:
			case MINUS:
			case ASTERISK:
			case SLASH:
			case BACKSLASH:
			case SEMICOLON:
			case GREATER_SIGN:
			case GREATER_EQUALS_SIGN:
			case LESSER_SIGN:
			case LESSER_EQUALS_SIGN:
			case NUMBER_LITERAL:
			case LESSER_GREATER:
			case STRING_LITERAL:
			case LABEL_IDENTIFIER:
			case COMMENT:
			case PERCENT:
			case QUESTIONMARK:
			case OPERAND_SKIP:
				return false;
			default:
				return true;
		}
	}
}
