package org.amshove.natlint.natparse.lexing;

import org.junit.jupiter.api.DynamicTest;
import org.junit.jupiter.api.TestFactory;

import static org.junit.jupiter.api.DynamicTest.dynamicTest;

import java.util.Arrays;

public class LexerForKeywordsShould extends AbstractLexerTest
{

	@TestFactory
	Iterable<DynamicTest> lexKCheckReservedKeywords()
	{
		return Arrays.asList(
			keywordTest("ABS", SyntaxKind.ABS),
			keywordTest("ACCEPT", SyntaxKind.ACCEPT),
			keywordTest("ADD", SyntaxKind.ADD),
			keywordTest("ALL", SyntaxKind.ALL),
			keywordTest("ANY", SyntaxKind.ANY),
			keywordTest("ASSIGN", SyntaxKind.ASSIGN),
			keywordTest("AT", SyntaxKind.AT),
			keywordTest("ATN", SyntaxKind.ATN),
			keywordTest("AVER", SyntaxKind.AVER),
			keywordTest("BACKOUT", SyntaxKind.BACKOUT),
			keywordTest("BEFORE", SyntaxKind.BEFORE),
			keywordTest("BREAK", SyntaxKind.BREAK),
			keywordTest("BROWSE", SyntaxKind.BROWSE),
			keywordTest("CALL", SyntaxKind.CALL),
			keywordTest("CALLDBPROC", SyntaxKind.CALLDBPROC),
			keywordTest("CALLNAT", SyntaxKind.CALLNAT),
			keywordTest("CLOSE", SyntaxKind.CLOSE),
			keywordTest("COMMIT", SyntaxKind.COMMIT),
			keywordTest("COMPOSE", SyntaxKind.COMPOSE),
			keywordTest("COMPRESS", SyntaxKind.COMPRESS),
			keywordTest("COMPUTE", SyntaxKind.COMPUTE),
			keywordTest("COPY", SyntaxKind.COPY),
			keywordTest("COS", SyntaxKind.COS),
			keywordTest("COUNT", SyntaxKind.COUNT),
			keywordTest("CREATE", SyntaxKind.CREATE),
			keywordTest("DECIDE", SyntaxKind.DECIDE),
			keywordTest("DEFINE", SyntaxKind.DEFINE),
			keywordTest("DELETE", SyntaxKind.DELETE),
			keywordTest("DISPLAY", SyntaxKind.DISPLAY),
			keywordTest("DIVIDE", SyntaxKind.DIVIDE),
			keywordTest("DLOGOFF", SyntaxKind.DLOGOFF),
			keywordTest("DLOGON", SyntaxKind.DLOGON),
			keywordTest("DNATIVE", SyntaxKind.DNATIVE),
			keywordTest("DO", SyntaxKind.DO),
			keywordTest("DOEND", SyntaxKind.DOEND),
			keywordTest("DOWNLOAD", SyntaxKind.DOWNLOAD),
			keywordTest("EJECT", SyntaxKind.EJECT),
			keywordTest("ELSE", SyntaxKind.ELSE),
			keywordTest("END", SyntaxKind.END),
			keywordTest("END-ALL", SyntaxKind.END_ALL),
			keywordTest("END-BEFORE", SyntaxKind.END_BEFORE),
			keywordTest("END-BREAK", SyntaxKind.END_BREAK),
			keywordTest("END-BROWSE", SyntaxKind.END_BROWSE),
			keywordTest("END-DECIDE", SyntaxKind.END_DECIDE),
			keywordTest("END-ENDDATA", SyntaxKind.END_ENDDATA),
			keywordTest("END-ENDFILE", SyntaxKind.END_ENDFILE),
			keywordTest("END-ENDPAGE", SyntaxKind.END_ENDPAGE),
			keywordTest("END-ERROR", SyntaxKind.END_ERROR),
			keywordTest("END-FILE", SyntaxKind.END_FILE),
			keywordTest("END-FIND", SyntaxKind.END_FIND),
			keywordTest("END-FOR", SyntaxKind.END_FOR),
			keywordTest("END-FUNCTION", SyntaxKind.END_FUNCTION),
			keywordTest("END-HISTOGRAM", SyntaxKind.END_HISTOGRAM),
			keywordTest("ENDHOC", SyntaxKind.ENDHOC),
			keywordTest("END-IF", SyntaxKind.END_IF),
			keywordTest("END-LOOP", SyntaxKind.END_LOOP),
			keywordTest("END-NOREC", SyntaxKind.END_NOREC),
			keywordTest("END-PARSE", SyntaxKind.END_PARSE),
			keywordTest("END-PROCESS", SyntaxKind.END_PROCESS),
			keywordTest("END-READ", SyntaxKind.END_READ),
			keywordTest("END-REPEAT", SyntaxKind.END_REPEAT),
			keywordTest("END-RESULT", SyntaxKind.END_RESULT),
			keywordTest("END-SELECT", SyntaxKind.END_SELECT),
			keywordTest("END-SORT", SyntaxKind.END_SORT),
			keywordTest("END-START", SyntaxKind.END_START),
			keywordTest("END-SUBROUTINE", SyntaxKind.END_SUBROUTINE),
			keywordTest("END-TOPPAGE", SyntaxKind.END_TOPPAGE),
			keywordTest("END-WORK", SyntaxKind.END_WORK),
			keywordTest("ENTIRE", SyntaxKind.ENTIRE),
			keywordTest("ESCAPE", SyntaxKind.ESCAPE),
			keywordTest("EXAMINE", SyntaxKind.EXAMINE),
			keywordTest("EXP", SyntaxKind.EXP),
			keywordTest("EXPAND", SyntaxKind.EXPAND),
			keywordTest("EXPORT", SyntaxKind.EXPORT),
			keywordTest("FALSE", SyntaxKind.FALSE),
			keywordTest("FETCH", SyntaxKind.FETCH),
			keywordTest("FIND", SyntaxKind.FIND),
			keywordTest("FOR", SyntaxKind.FOR),
			keywordTest("FORMAT", SyntaxKind.FORMAT),
			keywordTest("FRAC", SyntaxKind.FRAC),
			keywordTest("GET", SyntaxKind.GET),
			keywordTest("HISTOGRAM", SyntaxKind.HISTOGRAM),
			keywordTest("IF", SyntaxKind.IF),
			keywordTest("IGNORE", SyntaxKind.IGNORE),
			keywordTest("IMPORT", SyntaxKind.IMPORT),
			keywordTest("INCCONT", SyntaxKind.INCCONT),
			keywordTest("INCDIC", SyntaxKind.INCDIC),
			keywordTest("INCDIR", SyntaxKind.INCDIR),
			keywordTest("INCLUDE", SyntaxKind.INCLUDE),
			keywordTest("INCMAC", SyntaxKind.INCMAC),
			keywordTest("INPUT", SyntaxKind.INPUT),
			keywordTest("INSERT", SyntaxKind.INSERT),
			keywordTest("INT", SyntaxKind.INT),
			keywordTest("INVESTIGATE", SyntaxKind.INVESTIGATE),
			keywordTest("LIMIT", SyntaxKind.LIMIT),
			keywordTest("LOG", SyntaxKind.LOG),
			keywordTest("LOOP", SyntaxKind.LOOP),
			keywordTest("MAP", SyntaxKind.MAP),
			keywordTest("MAX", SyntaxKind.MAX),
			keywordTest("MIN", SyntaxKind.MIN),
			keywordTest("MOVE", SyntaxKind.MOVE),
			keywordTest("MULTIPLY", SyntaxKind.MULTIPLY),
			keywordTest("NAVER", SyntaxKind.NAVER),
			keywordTest("NCOUNT", SyntaxKind.NCOUNT),
			keywordTest("NEWPAGE", SyntaxKind.NEWPAGE),
			keywordTest("NMIN", SyntaxKind.NMIN),
			keywordTest("NONE", SyntaxKind.NONE),
			keywordTest("NULL-HANDLE", SyntaxKind.NULL_HANDLE),
			keywordTest("OBTAIN", SyntaxKind.OBTAIN),
			keywordTest("OLD", SyntaxKind.OLD),
			keywordTest("ON", SyntaxKind.ON),
			keywordTest("OPEN", SyntaxKind.OPEN),
			keywordTest("OPTIONS", SyntaxKind.OPTIONS),
			keywordTest("PARSE", SyntaxKind.PARSE),
			keywordTest("PASSW", SyntaxKind.PASSW),
			keywordTest("PERFORM", SyntaxKind.PERFORM),
			keywordTest("POS", SyntaxKind.POS),
			keywordTest("PRINT", SyntaxKind.PRINT),
			keywordTest("PROCESS", SyntaxKind.PROCESS),
			keywordTest("READ", SyntaxKind.READ),
			keywordTest("REDEFINE", SyntaxKind.REDEFINE),
			keywordTest("REDUCE", SyntaxKind.REDUCE),
			keywordTest("REINPUT", SyntaxKind.REINPUT),
			keywordTest("REJECT", SyntaxKind.REJECT),
			keywordTest("RELEASE", SyntaxKind.RELEASE),
			keywordTest("REPEAT", SyntaxKind.REPEAT),
			keywordTest("REQUEST", SyntaxKind.REQUEST),
			keywordTest("RESET", SyntaxKind.RESET),
			keywordTest("RESIZE", SyntaxKind.RESIZE),
			keywordTest("RESTORE", SyntaxKind.RESTORE),
			keywordTest("RET", SyntaxKind.RET),
			keywordTest("RETRY", SyntaxKind.RETRY),
			keywordTest("RETURN", SyntaxKind.RETURN),
			keywordTest("ROLLBACK", SyntaxKind.ROLLBACK),
			keywordTest("ROUNDED", SyntaxKind.ROUNDED),
			keywordTest("RULEVAR", SyntaxKind.RULEVAR),
			keywordTest("RUN", SyntaxKind.RUN),
			keywordTest("SELECT", SyntaxKind.SELECT),
			keywordTest("SEND", SyntaxKind.SEND),
			keywordTest("SEPARATE", SyntaxKind.SEPARATE),
			keywordTest("SET", SyntaxKind.SET),
			keywordTest("SETTIME", SyntaxKind.SETTIME),
			keywordTest("SGN", SyntaxKind.SGN),
			keywordTest("SHOW", SyntaxKind.SHOW),
			keywordTest("SIN", SyntaxKind.SIN),
			keywordTest("SKIP", SyntaxKind.SKIP),
			keywordTest("SORT", SyntaxKind.SORT),
			keywordTest("SORTKEY", SyntaxKind.SORTKEY),
			keywordTest("SQRT", SyntaxKind.SQRT),
			keywordTest("STACK", SyntaxKind.STACK),
			keywordTest("START", SyntaxKind.START),
			keywordTest("STOP", SyntaxKind.STOP),
			keywordTest("STORE", SyntaxKind.STORE),
			keywordTest("SUBSTR", SyntaxKind.SUBSTR),
			keywordTest("SUBSTRING", SyntaxKind.SUBSTRING),
			keywordTest("SUBTRACT", SyntaxKind.SUBTRACT),
			keywordTest("SUM", SyntaxKind.SUM),
			keywordTest("SUSPEND", SyntaxKind.SUSPEND),
			keywordTest("TAN", SyntaxKind.TAN),
			keywordTest("TERMINATE", SyntaxKind.TERMINATE),
			keywordTest("TOP", SyntaxKind.TOP),
			keywordTest("TOTAL", SyntaxKind.TOTAL),
			keywordTest("TRANSFER", SyntaxKind.TRANSFER),
			keywordTest("TRUE", SyntaxKind.TRUE),
			keywordTest("UNTIL", SyntaxKind.UNTIL),
			keywordTest("UPDATE", SyntaxKind.UPDATE),
			keywordTest("UPLOAD", SyntaxKind.UPLOAD),
			keywordTest("VAL", SyntaxKind.VAL),
			keywordTest("VALUE", SyntaxKind.VALUE),
			keywordTest("VALUES", SyntaxKind.VALUES),
			keywordTest("WASTE", SyntaxKind.WASTE),
			keywordTest("WHEN", SyntaxKind.WHEN),
			keywordTest("WHILE", SyntaxKind.WHILE),
			keywordTest("WITH_CTE", SyntaxKind.WITH_CTE),
			keywordTest("WRITE", SyntaxKind.WRITE));
	}

	private DynamicTest keywordTest(String keyword, SyntaxKind expectedKind)
	{
		return dynamicTest(keyword, () -> assertTokens(keyword, token(expectedKind, keyword)));
	}
}
